router.post("/signup", async (req, res) => {
  try {
    let { firstname, lastname, email, password } = req.body;
    let Validation = UserValidation.safeParse(req.body);
    if (Validation.success === false) {
      return res.send("Wrong Input");
    }

    let find_user = await User.findOne({ email });
    if (find_user) {
      return res.send("user already exists");
    }

    bcrypt.genSalt(10, async function (err, salt) {
      bcrypt.hash(password, salt, async function (err, hash) {
        let Add_user = new User({
          firstname: firstname,
          lastname: lastname,
          email: email,
          password: hash,
        });
        await Add_user.save();

        // ---- Creating account
        let userId = Add_user._id;
        await Account.create({
          userId,
          balance: Math.random() * 10000,
        });
      });
    });

    let token = jwt.sign({ email }, JWT_Secrat);
    res.json({
      message: "user created succesfully",
      token: token,
    });
  } catch (err) {
    console.log(err);
    res.status(500).json({
      message: "Internal Server Error",
    });
  }
});
